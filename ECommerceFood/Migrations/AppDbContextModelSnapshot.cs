// <auto-generated />
using System;
using ECommerceFood.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerceFood.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerceFood.Entities.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("Describe")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameRole")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            Describe = "Administrator Role",
                            NameRole = "Admin"
                        },
                        new
                        {
                            RoleID = 2,
                            Describe = "Vai trò người dùng trải nghiệm",
                            NameRole = "User"
                        });
                });

            modelBuilder.Entity("ECommerceFood.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<bool>("AccountStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IdFacebook")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdGoogle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordResetCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ResetCodeExpiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            AccountStatus = false,
                            Email = "admin@gmail.com",
                            IsDeleted = false,
                            Name = "Administrator",
                            Password = "jGl25bVBBBW96Qi9Te4V37Fnqchz/Eu4qB9vKrRIqRg=",
                            RegistrationDate = new DateTime(2024, 11, 21, 10, 21, 48, 930, DateTimeKind.Local).AddTicks(1550),
                            UserName = "admin"
                        },
                        new
                        {
                            UserID = 2,
                            AccountStatus = false,
                            Email = "hngoctro@gmail.com",
                            IsDeleted = false,
                            Name = "Huỳnh Ngọc Trợ",
                            Password = "71EwYhTZpjYe4dW0UubSu3DcfruFv54Cw9R0f7V9a+w=",
                            RegistrationDate = new DateTime(2024, 11, 21, 10, 21, 48, 930, DateTimeKind.Local).AddTicks(1579),
                            UserName = "NgocTro"
                        },
                        new
                        {
                            UserID = 3,
                            AccountStatus = false,
                            Email = "phucbin366@gmail.com",
                            IsDeleted = false,
                            Name = "Trần Văn Phúc",
                            Password = "71EwYhTZpjYe4dW0UubSu3DcfruFv54Cw9R0f7V9a+w=",
                            RegistrationDate = new DateTime(2024, 11, 21, 10, 21, 48, 930, DateTimeKind.Local).AddTicks(1594),
                            UserName = "VanPhuc"
                        },
                        new
                        {
                            UserID = 4,
                            AccountStatus = false,
                            Email = "caothiphuongvy27@gmail.com",
                            IsDeleted = false,
                            Name = "Cao Thị Phương Vy",
                            Password = "71EwYhTZpjYe4dW0UubSu3DcfruFv54Cw9R0f7V9a+w=",
                            RegistrationDate = new DateTime(2024, 11, 21, 10, 21, 48, 930, DateTimeKind.Local).AddTicks(1642),
                            UserName = "PhuongVy"
                        },
                        new
                        {
                            UserID = 5,
                            AccountStatus = false,
                            Email = "nguyenngocquy182752@gmail.com",
                            IsDeleted = false,
                            Name = "Nguyễn Thị Ngọc Quý",
                            Password = "71EwYhTZpjYe4dW0UubSu3DcfruFv54Cw9R0f7V9a+w=",
                            RegistrationDate = new DateTime(2024, 11, 21, 10, 21, 48, 930, DateTimeKind.Local).AddTicks(1657),
                            UserName = "NgocQuy"
                        });
                });

            modelBuilder.Entity("ECommerceFood.Entities.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("ECommerceFood.Entities.UserRole", b =>
                {
                    b.HasOne("ECommerceFood.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerceFood.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ECommerceFood.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("ECommerceFood.Entities.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
